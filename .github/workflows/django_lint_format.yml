name: Django Format, Lint, and Check

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  format:
    name: Format Code
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tool: [black, isort, djlint]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install ${{ matrix.tool }}
        run: pip install ${{ matrix.tool }}
      - name: Run ${{ matrix.tool }}
        run: |
          if [ "${{ matrix.tool }}" = "black" ]; then
            black university
          elif [ "${{ matrix.tool }}" = "isort" ]; then
            isort university
          elif [ "${{ matrix.tool }}" = "djlint" ]; then
            djlint --reformat university
          fi
      - name: Upload formatted code
        uses: actions/upload-artifact@v4
        with:
          name: formatted-code-${{ matrix.tool }}
          path: university

  combine-and-create-pr:
    name: Combine Formatting Changes and Create PR
    needs: format
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: formatted-code
      - name: Combine changes
        run: |
          for dir in formatted-code/formatted-code-*; do
            cp -R "$dir"/* university/
          done
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Apply automatic formatting
          title: "Auto-formatting changes"
          body: "This PR applies automatic formatting changes."
          branch: auto-format-${{ github.sha }}
          base: ${{ github.head_ref || github.ref_name }}
          delete-branch: true

  lint:
    name: Lint and Check
    needs: combine-and-create-pr
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tool: [flake8, black, djlint, isort]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox
      - name: Run ${{ matrix.tool }}
        run: tox -e ${{ matrix.tool }}

  notify:
    name: Notify about changes
    needs: [combine-and-create-pr, lint]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Check for PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_url=$(gh pr list --head auto-format-${{ github.sha }} --json url --jq '.[0].url')
          if [ -n "$pr_url" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "pr_url=$pr_url" >> $GITHUB_OUTPUT
          fi
        id: pr-check
      - name: Notify about changes
        if: steps.pr-check.outputs.changes == 'true'
        run: |
          echo "Formatting changes were made. A pull request has been created at ${{ steps.pr-check.outputs.pr_url }}"
